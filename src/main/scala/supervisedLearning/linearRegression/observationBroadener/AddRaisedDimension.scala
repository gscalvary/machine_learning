package supervisedLearning.linearRegression.observationBroadener
import breeze.linalg.DenseVector

class AddRaisedDimension(override val index: Int, private val power: Double) extends ExtendObservationDimensions(index) {
	
	/**
	  * Given an observation, extend it by adding a new dimension generated by taking the dimension indexed by index
	  * and raising it by a power.
	  *
	  * @param observation an observation to which we would like to add a dimension
	  * @return the extended observation
	  */
	override def getExtendedObservation(observation: DenseVector[Double]): DenseVector[Double] = {
		
		if (super.isIndexOutOfBounds(observation)) {
			return observation
		}
		
		val newDimensionValue = scala.math.pow(observation(index), power)
		super.extendObservation(observation, newDimensionValue)
	}
}
